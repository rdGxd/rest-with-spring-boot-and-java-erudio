name: Continuous Integration with Github Actions

on:
  push:
    branches: 
      - main
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3.2.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'adopt'
        cache: maven
  
    - name: Build Application JAR
      working-directory: ./23_DeploingOurAppToAWS/rest-with-spring-boot-and-java
      run: mvn clean package

    - name: Docker Compose Build
      working-directory: ./23_DeploingOurAppToAWS
      run: docker compose up -d --build

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:latest ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:${{ github.run_id }}

        docker push ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:latest

    - name: Tag, and push image to Amazon ECR
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:latest ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:latest ${{ secrets.IMAGE_REPO_URL }}:latest

        docker push ${{ secrets.IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.IMAGE_REPO_URL }}:latest

    - name: Download task definition
      run: |
        aws ecs describe-task-definition --task-definition ${{ secrets.TASK_DEFINITION_NAME }} --query taskDefinition > task-definition.json

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ secrets.CONTAINER_NAME }}
        image: ${{ secrets.IMAGE_REPO_URL }}:latest

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ secrets.SERVICE_NAME }}
        cluster: ${{ secrets.CLUSTER_NAME }}
        wait-for-service-stability: true

    - name: Push to Docker Hub Container Registry
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:latest ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:${{ github.run_id }}

        docker push ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/rest_with_spring_boot:latest
        
